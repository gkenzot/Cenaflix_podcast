/*
 * Copyright (C) 2024 kenzo
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.senac.cenaflix_podcast.gui;

import br.com.senac.cenaflix_podcast.persistencia.Podcast;
import br.com.senac.cenaflix_podcast.persistencia.PodcastDAO;
import java.awt.HeadlessException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * A classe Listagem representa a interface gráfica para visualizar e interagir
 * com a lista de podcasts do sistema Cenaflix Podcast.
 *
 * Permite a visualização, pesquisa, edição, exclusão e cadastro de podcasts.
 *
 * @author kenzo
 */
public final class Listagem extends javax.swing.JFrame {

    /**
     * Creates new form Listagem
     *
     */
    public Listagem() {
        initComponents(); // Primeiro, inicialize os componentes da interface gráfica
        PodcastDAO podcastDao = new PodcastDAO();
        List<Podcast> podcasts = podcastDao.listar("");
        preencheTabela(podcasts);
    }

    /**
     * Configura as permissões com base no tipo de usuário.
     *
     * @param tipoUsuario O tipo de usuário logado.
     */
    public void configurarPermissoes(String tipoUsuario) {
        if (tipoUsuario.equalsIgnoreCase("Admin")) {
            btnCadastrar.setEnabled(true);
            btnExcluir.setEnabled(true);
            btnEditar.setEnabled(true);
        } else if (tipoUsuario.equalsIgnoreCase("Operador")) {
            btnCadastrar.setEnabled(true);
            btnExcluir.setEnabled(false);
            btnEditar.setEnabled(false);
        } else if (tipoUsuario.equalsIgnoreCase("Usuario")) {
            btnCadastrar.setEnabled(false);
            btnExcluir.setEnabled(false);
            btnEditar.setEnabled(false);
        } else {
            btnPesquisar.setEnabled(false);
            btnCadastrar.setEnabled(false);
            btnExcluir.setEnabled(false);
            btnEditar.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCenaflixPodcast = new javax.swing.JLabel();
        lblPesquisar = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListagem = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LISTAGEM");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("");

        lblCenaflixPodcast.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCenaflixPodcast.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCenaflixPodcast.setText("CENAFLIX PODCAST");

        lblPesquisar.setText("Pesquisar podcast por produtor:");

        btnPesquisar.setText("Pesquisar/Atualizar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblListagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblListagem);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addComponent(lblCenaflixPodcast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(lblPesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnPesquisar)
                        .addGap(0, 47, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addGap(189, 189, 189)
                .addComponent(btnCadastrar)
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCenaflixPodcast)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisar)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnCadastrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Ação executada quando o botão "Editar" é pressionado. Abre a tela de
     * cadastro preenchida com as informações do podcast selecionado na tabela,
     * permitindo a edição dos dados.
     *
     * @param evt O evento de ação que acionou este método.
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            //criando nova tela de cadastro
            Cadastro cadastro = new Cadastro();
            if (tblListagem.getSelectedRow() >= 0) { //há linha selecionada na tabela? 
                String id = (String) tblListagem.getValueAt(tblListagem.getSelectedRow(), 0);
                //obtendo o objeto Despesa do id selecionado...
                PodcastDAO podcastDao = new PodcastDAO();
                Podcast podcastSelecionado = podcastDao.obter(Integer.parseInt(id)
                );
                //...e o repassando para a tela de cadastro
                cadastro.preencheEdicao(podcastSelecionado);
                cadastro.setVisible(true);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * Ação executada quando o botão "Excluir" é pressionado. Exclui o podcast
     * selecionado na tabela, após confirmação do usuário.
     *
     * @param evt O evento de ação que acionou este método.
     */
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            if (tblListagem.getSelectedRow() >= 0) {
                //verifica se há algo selecionado na tabela 
                //obtém o valor da coluna id da linha selecionada
                String id = (String) tblListagem.getValueAt(tblListagem.getSelectedRow(), 0);
                //janela de confirmação
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir o registro " + id + "?");
                if (resposta == 0)//0- yes, 1- no, 2- cancel
                {
                    //realizando a exclusão
                    PodcastDAO despesaDao = new PodcastDAO();
                    despesaDao.excluir(Integer.parseInt(id));
                    JOptionPane.showMessageDialog(this, "Registro excluído com sucesso");
                    //refazendo a pesquisa para atualizar a tabela na tela
                    btnPesquisarActionPerformed(evt);
                }
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha:\n" + e.getMessage()
            );
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * Ação executada quando o botão "Cadastrar" é pressionado. Abre a tela de
     * cadastro para adicionar um novo podcast.
     *
     * @param evt O evento de ação que acionou este método.
     */
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        Cadastro cadastro = new Cadastro();
        cadastro.setVisible(true);
    }//GEN-LAST:event_btnCadastrarActionPerformed

    /**
     * Ação executada quando o botão "Pesquisar/Atualizar" é pressionado.
     * Realiza uma nova pesquisa de podcasts com base no critério de pesquisa
     * fornecido no campo de texto "txtPesquisar" e atualiza a tabela com os
     * resultados. Pesquisar em branco também serve para Atualizar a tabela
     *
     * @param evt O evento de ação que acionou este método.
     */
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            PodcastDAO podcastDao = new PodcastDAO();
            List<Podcast> podcasts = podcastDao.listar(txtPesquisar.getText());
            preencheTabela(podcasts);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha:\n" + e.getMessage());
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Listagem listagem = new Listagem();
            listagem.setVisible(true);
        });
    }

    /**
     * Coloca as informações da tabela sql na tabela do form
     *
     * @param podcasts A lista de podcasts a ser exibida na tabela.
     */
    public void preencheTabela(List<Podcast> podcasts) {
        String columns[] = {"Id", "Produtor", "Nome", "N Ep", "Duracao", "URL"};
        String dados[][] = new String[podcasts.size()][columns.length];
        int i = 0;
        for (Podcast p : podcasts) {
            dados[i] = new String[]{
                String.valueOf(p.getId()),
                p.getProdutor(),
                p.getNome(),
                String.valueOf(p.getNumero()),
                p.getDuracao(),
                p.getUrl()
            };
            i++;
        }
        DefaultTableModel model = new DefaultTableModel(dados, columns);
        tblListagem.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCenaflixPodcast;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JTable tblListagem;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
